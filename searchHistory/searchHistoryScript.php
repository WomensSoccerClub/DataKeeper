<?php
error_reporting(E_ERROR | E_PARSE);
require_once("xml2json.php");




// Filename from where XML contents are to be read.
$testXmlFile = "searchHistory.xml";

//Read the XML contents from the input file.
file_exists($testXmlFile) or die('Could not find file ' . $testXmlFile);
//$xmlStringContents = file_get_contents($testXmlFile); 
//$jsonContents = "";

$dom = new DOMDocument();
$dom->load('searchHistory.xml');
$xp = new DOMXPath($dom);

$searchlist = $xp->query('/searches/search');

$pops = iterator_to_array($searchlist);
$dates = iterator_to_array($searchlist);


function sort_by_numeric_id_attr($a, $b)
{
    return (int) $b->getAttribute('popularity') - (int) $a->getAttribute('popularity');
}

function sort_by_date_attr($a, $b)
{  
    //echo $b->getAttribute('date')." ".strtotime($b->getAttribute('date')).'<br/>';
    //echo $a->getAttribute('date')." ".strtotime($a->getAttribute('date')).'<br/><br/>';
    return  (int)strtotime($b->getAttribute('date')) -  (int)strtotime($a->getAttribute('date'));
}

usort($pops, 'sort_by_numeric_id_attr');
usort($dates, 'sort_by_date_attr');

$pops = array_slice($pops, 0, 4);
$dates = array_slice($dates, 0, 6);
$searchHistory = array_merge($pops, $dates);

foreach ($searchHistory as $list) {
    echo $list->C14N(), "\n";
}
//echo $searchHistory;
//foreach ($dates as $list) {
//    echo $list->C14N(), "\n\n";
//}


// Convert it to JSON now. 
// xml2json simply takes a String containing XML contents as input.
//$jsonContents = xml2json::transformXmlStringToJson($xmlStringContents);

//echo("JSON formatted output generated by xml2json:\n\n");
//echo json_encode($jsonContents);
//echo $xmlStringContents;

//$page = simpledom_load_string('<page>
//    <talentTrees>
//        <tree name="Football" order="2"/>
//        <tree name="Baseball" order="0"/>
//        <tree name="Frisbee" order="1"/>
//    </talentTrees>
//</page>');
//
//$nodes = $page->sortedXPath('//tree', '@order');
//
//foreach ($nodes as $node)
//{
//    echo $node->asXML(), "\n";
//}
?>